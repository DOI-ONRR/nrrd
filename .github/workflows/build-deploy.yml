name: Build and deploy

on:
  push:
    branches-ignore:
      - master
  
  pull_request:
    branches:
      - dev
      - master

jobs:
  apply_database_updates:
    uses: ./.github/workflows/apply-database-changes.yml
    with:
      cf-space: dev
      cf-app-name: hasura-sandbox
      cf-service-name: nrrd-psql
    secrets: inherit

  generate_downloads:
    needs: apply_database_updates
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install CF CLI
        uses: doi-onrr/oddd-actions/.github/actions/cf-install@v1

      - name: Log in to Cloud Foundry
        shell: bash
        run: |
          cf login -u ${{ secrets.CF_USERNAME }} -p ${{ secrets.CF_PASSWORD }} -a api.fr.cloud.gov -o doi-onrr -s ${{ inputs.cf-space }}

      - name: Install connect-to-service CF plugin
        shell: bash
        run: |
          cf install-plugin -f https://github.com/cloud-gov/cf-service-connect/releases/download/1.1.0/cf-service-connect-linux-amd64
      
      - name: Install gnumeric
        run: |
          sudo apt-get install --no-install-recommends -y gnumeric
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies in database directory
        run: npm install
        working-directory: ./database

      - name: Open tunnel and apply Liquibase updates
        run: .github/scripts/apply-liquibase-via-cf-tunnel.sh
        shell: bash
        env:
          CF_APP_NAME: ${{ inputs.cf-app-name }}
          CF_SERVICE_NAME: ${{ inputs.cf-service-name }}

      - name: Upload download files
        uses: actions/upload-artifact@v4
        with:
          name: downloads
          path: /tmp/downloads

  # build:
  #   runs-on: ubuntu-latest
  #   env:
  #     GTM_ID: ${{ secrets.GTM_ID }}
  #   outputs:
  #     build-dir: ${{ steps.set-output.outputs.build-dir }}

  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v4
    
  #   - name: Setup node
  #     uses: actions/setup-node@v4
  #     with:
  #       node-version: 20
  #       cache: 'npm'
    
  #   - name: Install dependencies
  #     run: npm ci
    
  #   - name: Build application
  #     run: npm run build --if-present

  #   - name: Rename ~partytown directory
  #     run: |
  #       if [ -d public/~partytown ]; then
  #         mv public/~partytown public/_partytown
  #       fi

  #   - name: Upload build artifacts
  #     uses: actions/upload-artifact@v4
  #     with:
  #       name: public
  #       path: public

  # preview:
  #   needs: build
  #   if: github.ref != 'refs/heads/master' && github.ref != 'refs/heads/dev'
  #   uses: doi-onrr/oddd-actions/.github/workflows/cf-deploy.yml@v1
  #   with:
  #     manifest: manifest.dev.yml
  #   secrets: inherit

  # dev:
  #   needs: build
  #   if: github.ref != 'refs/heads/master' && github.ref != 'refs/heads/dev'
  #   uses: doi-onrr/oddd-actions/.github/workflows/cf-deploy.yml@v1
  #   with:
  #     manifest: manifest.dev.yml
  #   secrets: inherit

  # prod:
  #   needs: build
  #   if: github.ref == 'refs/heads/master'
  #   uses: doi-onrr/oddd-actions/.github/workflows/cf-deploy.yml@v1
  #   with:
  #     cf-space: prod
  #     manifest: manifest.master.yml
  #   secrets: inherit